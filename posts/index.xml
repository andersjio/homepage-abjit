<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on ABJ IT</title><link>https://abjit.dk/posts/</link><description>Recent content in Blog on ABJ IT</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 17 Aug 2023 09:44:39 +0200</lastBuildDate><atom:link href="https://abjit.dk/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>ECS on Jenkins</title><link>https://abjit.dk/posts/ecs-on-jenkins/</link><pubDate>Thu, 17 Aug 2023 09:44:39 +0200</pubDate><guid>https://abjit.dk/posts/ecs-on-jenkins/</guid><description>Motivation Researching different ways to improve stability and performance for the builds running on Jenkins , we decided to give AWS Elastic Container Service (ECS) a try.
This would enable the (re)use of Docker containers, but running on dedicated AWS hardware instead of some of on-premise infrastructure.
The setup of ECS in Jenkins was pretty straightforward following this guide and using this Jenkins plugin.
We quickly realized that adding ECS labels inside Jenkins would quickly grow to something unmanageable and at the same it had to be done by hand, because Jenkins Configuration as Code wasn&amp;rsquo;t used.</description></item></channel></rss>